{"version":3,"sources":["BooksAPI.js","BookShelf.js","Books.js","SearchBooks.js","App.js","index.js"],"names":["api","headers","Accept","Authorization","Math","random","toString","substr","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","BookShelf","state","showSearchPage","_this","props","renderBooks","status","map","bk","filter","react_default","a","createElement","className","style","width","height","backgroundImage","imageLinks","thumbnail","title","onChange","evt","changeStatus","target","value","authors","evnt","st","this","bknew","selectedIndex","BooksAPI","catch","err","console","log","setState","name","React","Component","Books","_this2","_this3","src_BookShelf","SearchBooks","length","qry","query","maxResults","hasOwnProperty","onClick","myPage","type","placeholder","searchBooks","BooksApp","BrowserRouter","Link","to","Switch","Route","exact","path","component","render","ReactDOM","src_App","document","getElementById"],"mappings":"kOACMA,EAAM,wCAMNC,EAAU,CACdC,OAAU,mBACVC,cAJWC,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAYnCC,EAAS,kBACpBC,MAAK,GAAAC,OAAIV,EAAJ,UAAiB,CAAEC,YACrBU,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIA,EAAKC,SAEVC,EAAS,SAACC,EAAMC,GAAP,OACpBT,MAAK,GAAAC,OAAIV,EAAJ,WAAAU,OAAiBO,EAAKE,IAAM,CAC/BC,OAAQ,MACRnB,QAAQoB,OAAAC,EAAA,EAAAD,CAAA,GACHpB,EADE,CAELsB,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAER,YACtBP,KAAK,SAAAC,GAAG,OAAIA,EAAIC,UCoGNc,6MA7HZC,MAAQ,CACHC,eAAgBC,EAAKC,MAAMF,eAC/Bd,MAAMe,EAAKC,MAAMhB,SAUnBiB,YAAc,SAACC,GAEZ,OAAOH,EAAKC,MAAMhB,MAAMmB,IAAI,SAAAC,GAAE,OAAEA,IAAIC,OAAO,SAAAnB,GAAI,OAAEA,EAAKC,QAAQe,IAAQC,IAAI,SAAAjB,GAEzE,OAEFoB,EAAAC,EAAAC,cAAA,UACoBF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAE9BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IAAKC,gBAAe,OAAAlC,OAASO,EAAK4B,WAAWC,UAAzB,QAGnFT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAEEH,EAAAC,EAAAC,cAAA,UAAQpB,GAAE,GAAAT,OAAMO,EAAK8B,OAAUC,SAAU,SAAAC,GAAG,OAAInB,EAAKoB,aAAaD,EAAIE,UAC7Dd,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,UAAQa,MAAM,oBAAd,qBACCf,EAAAC,EAAAC,cAAA,UAAQa,MAAM,cAAd,gBACAf,EAAAC,EAAAC,cAAA,UAAQa,MAAM,QAAd,QACxBf,EAAAC,EAAAC,cAAA,UAAQa,MAAM,QAAd,WAKmBf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAevB,EAAK8B,OACpCV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAiBvB,EAAKoC,0FAlClDC,GAEX,IAAMC,EAAI,CAAC,GAAG,mBAAmB,aAAa,OAAO,QACrDC,KAAKzB,MAAMhB,MAAMqB,OAAO,SAAAnB,GAAI,OAAEA,EAAK8B,QAAQO,EAAKnC,KAAIe,IAAI,SAAAuB,GAAK,OAAGA,EAAMvC,MAAQqC,EAAGD,EAAKI,iBACxFF,KAAKzB,MAAMhB,MAAMqB,OAAO,SAAAD,GAAE,OAAEA,EAAGY,QAAQO,EAAKnC,KAAIe,IAAI,SAAAC,GAAE,OAAGwB,EAAgBxB,EAAGoB,EAAGD,EAAKI,gBAAgB/C,KAAK,SAAAC,GAAG,OAAEuB,EAAGjB,MAAMqC,EAAGD,EAAKI,iBAAgBE,MAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAI,aACtKP,KAAKQ,SAAS,qCA0CT,OAAgC,GAA7BR,KAAK5B,MAAMC,eAIXQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,sBAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAClBH,EAAAC,EAAAC,cAAA,OAAK0B,KAAK,eACH5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,kBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAEPgB,KAAKxB,YAAY,cAYpCK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,sBAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAEzBH,EAAAC,EAAAC,cAAA,OAAK0B,KAAK,gBACI5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,qBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAEZgB,KAAKxB,YAAY,wBAKpCK,EAAAC,EAAAC,cAAA,OAAK0B,KAAK,aACG5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,QACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAEZgB,KAAKxB,YAAY,YAKpCK,EAAAC,EAAAC,cAAA,OAAK0B,KAAK,aACG5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,gBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAEZgB,KAAKxB,YAAY,2BAjHfkC,IAAMC,WCsCfC,6MApCZxC,MAAQ,CACHC,gBAAgB,EACpBd,MAAM,uFAGS,IAAAsD,EAAAb,KAClBM,QAAQC,IAAI,qBACZJ,IAAkBhD,KAAK,SAAAC,GAAG,OAAEkD,QAAQC,IAAInD,KACzC+C,IAAkBhD,KAAK,SAAAC,GAAG,OAAEyD,EAAKL,SAAS,CAACjD,MAAMH,MAC7BgD,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,0CAI/BP,GACd,IAAAgB,EAAAd,KACQD,EAAI,CAAC,mBAAmB,aAAa,OAAO,QAEpDC,KAAK5B,MAAMb,MAAMmB,IAAI,SAAAjB,GAAI,OAAGA,IAAMmB,OAAO,SAAAnB,GAAI,OAAEA,EAAK8B,QAAQO,EAAKnC,KAAIe,IAAI,SAAAuB,GAAK,OAAGA,EAAMvC,MAAQqC,EAAGD,EAAKI,iBAGvGC,EAAgBH,KAAK5B,MAAMb,MAAMqB,OAAO,SAAAnB,GAAI,OAAEA,EAAK8B,QAAQO,EAAKnC,KAAIoC,EAAGD,EAAKI,gBACxE/C,KAAK,SAAAC,GAAG,OAAE0D,EAAK1C,MAAMb,MAAMqB,OAAO,SAAAnB,GAAI,OAAEA,EAAKE,KAAKP,EAAIO,KAAIe,IAAI,SAAAuB,GAAK,OAAGA,EAAMvC,MAAQN,EAAIM,UACvE0C,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,KAC9CL,KAAKQ,SAAS,CAACjD,MAAMyC,KAAK5B,MAAMb,MAAMmB,IAAI,SAAAC,GAAE,OAAEA,IAAIC,OAAO,SAAAD,GAAE,MAAY,QAAVA,EAAGjB,UAChEsC,KAAK5B,MAAMb,MAAMmB,IAAI,SAAAC,GAAE,OAAE2B,QAAQC,IAAI,sBAAuB5B,EAAGY,0CAO9D,OAAYV,EAAAC,EAAAC,cAACgC,EAAD,CAAYxD,MAAOyC,KAAK5B,MAAMb,eAhCvBmD,IAAMC,WCgIXK,6MA5Hb5C,MAAQ,CACFC,gBAAgB,EACfd,MAAM,MA0CdiB,YAAc,WAGf,OAAOF,EAAKF,MAAMb,MAAMqB,OAAO,SAAAD,GAAE,MAAY,QAAVA,EAAGjB,OAAyB,cAAViB,EAAGjB,OAA+B,oBAAViB,EAAGjB,QAA2BgB,IAAI,SAAAjB,GAGzG,OAF4C,GAAlCA,EAAK4B,WAAWC,UAAU2B,SAAWxD,EAAK4B,WAAWC,UAAU,IAI3ET,EAAAC,EAAAC,cAAA,UACoBF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAE9BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IAAKC,gBAAe,OAAAlC,OAASO,EAAK4B,WAAWC,UAAzB,QAGnFT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAEEH,EAAAC,EAAAC,cAAA,UAAQpB,GAAE,GAAAT,OAAMO,EAAK8B,OAAUC,SAAU,SAAAC,GAAG,OAAInB,EAAKoB,aAAaD,EAAIE,UAC9Dd,EAAAC,EAAAC,cAAA,wBACCF,EAAAC,EAAAC,cAAA,UAAQa,MAAM,oBAAd,qBACCf,EAAAC,EAAAC,cAAA,UAAQa,MAAM,cAAd,gBACAf,EAAAC,EAAAC,cAAA,UAAQa,MAAM,QAAd,WAKLf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAevB,EAAK8B,OACpCV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAiBvB,EAAKoC,yFAhEnDqB,GACZ,IHeuBC,EAAOC,EGf9BP,EAAAb,KAEKkB,EAAID,OAAS,GAEhBX,QAAQC,IAAI,iBAAiBW,IHWRC,EGTND,EHSaE,EGTT,GHUnBnE,MAAK,GAAAC,OAAIV,EAAJ,WAAkB,CACrBoB,OAAQ,OACRnB,QAAQoB,OAAAC,EAAA,EAAAD,CAAA,GACHpB,EADE,CAELsB,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAEiD,QAAOC,iBAC7BjE,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIA,EAAKC,SGlBEJ,KAAK,SAAAC,GAAG,OAAEyD,EAAKL,SAAS,CAACjD,MAAMH,MACtCgD,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,KACpCL,KAAK5B,MAAMb,MAAM0D,OAAS,GAE9BjB,KAAKQ,SAAS,CAACjD,MAAMyC,KAAK5B,MAAMb,MAAMqB,OAAO,SAAAD,GAAE,OAA+B,GAA7BA,EAAG0C,eAAe,WAClD3C,IAAI,SAACnB,GAAW,OAAOM,OAAAC,EAAA,EAAAD,CAAA,GAAIN,EAAX,CAAkBG,MAAQ,aAE1DsC,KAAK5B,MAAMb,MAAMmB,IAAI,SAAAC,GAAE,OAAE2B,QAAQC,IAAI,4BAA8B5B,EAAGY,MAAQ,UAAWZ,EAAGjB,SAC9FsC,KAAK5B,MAAMb,MAAMmB,IAAI,SAAAC,GAAE,OAAEwB,EAAgBxB,EAAG,QAAQxB,KAAK,SAAAC,GAAG,OAAEkD,QAAQC,IAAI,sBAAwB5B,EAAGY,SAASa,MAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAI,eAKrID,QAAQC,IAAI,iBAAkBW,EAAID,QAChCjB,KAAKQ,SAAS,CAACjD,MAAM,2CAGXuC,GAEZ,IAAMC,EAAI,CAAC,GAAG,mBAAmB,aAAa,OAAO,QACtDC,KAAK5B,MAAMb,MAAMqB,OAAO,SAAAnB,GAAI,OAAEA,EAAK8B,QAAQO,EAAKnC,KAAIe,IAAI,SAAAuB,GAAK,OAAGA,EAAMvC,MAAQqC,EAAGD,EAAKI,iBACtFF,KAAK5B,MAAMb,MAAMqB,OAAO,SAAAD,GAAE,OAAEA,EAAGY,QAAQO,EAAKnC,KAAIe,IAAI,SAAAC,GAAE,OAAGwB,EAAgBxB,EAAGoB,EAAGD,EAAKI,gBAAgB/C,KAAK,SAAAC,GAAG,OAAEkD,QAAQC,IAAI,mCAAqC5B,EAAGY,SAASa,MAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAI,aAChMP,KAAKQ,SAAS,IAChBL,IAAkBhD,KAAK,SAAAC,GAAG,OAAEkD,QAAQC,IAAInD,sCAGxC+C,IAAkBhD,KAAK,SAAAC,GAAG,OAAEkD,QAAQC,IAAInD,sCAyChC,IAAA0D,EAAAd,KAEL,OACDnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACNH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACdH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAesC,QAAS,SAAA7B,GAAG,OAAEqB,EAAKS,WAA/C,SAEC1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,SAAOyC,KAAK,OAAOC,YAAY,4BAA4BjC,SAAU,SAAAC,GAAG,OAAIqB,EAAKY,YAAYjC,EAAIE,OAAOC,UAGvHf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAClBH,EAAAC,EAAAC,cAAA,OAAK0B,KAAK,eACH5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,kBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAE5BgB,KAAKxB,+BAxGekC,IAAMC,wDCmDjBgB,6MA1CbvD,MAAQ,CAENC,gBAAgB,EAChBd,MAAM,iFAKTyD,EAAYU,+CAEF,IAAAb,EAAAb,KACP,OACKnB,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,KACF/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAIhBH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAMC,GAAG,gBAAiBjD,EAAAC,EAAAC,cAAA,0BAE/BF,EAAAC,EAAAC,cAACgD,EAAA,EAAD,KACElD,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAKC,UAAWvB,IAClC/B,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAQC,OAAK,EAACC,KAAK,eAAeC,UAAWnB,IAC5CnC,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAQC,OAAK,EAACC,KAAK,aAAaC,UAAWhE,EAAWiE,OAAQ,kBAAOvD,EAAAC,EAAAC,cAACgC,EAAD,CAAWxD,MAAOsD,EAAKzC,MAAMb,MAAOc,eAAgBwC,EAAKzC,MAAMC,8BAxBtHqC,IAAMC,kBCT7B0B,IAASD,OAAOvD,EAAAC,EAAAC,cAACuD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.c3df54da.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token =  Math.random().toString(36).substr(-8);\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query, maxResults) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query, maxResults })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from 'react'\nimport Component from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport SearchBooks from './SearchBooks'\nclass BookShelf extends React.Component {\n   state = {\n        showSearchPage: this.props.showSearchPage,\n    books:this.props.books\n  }\nchangeStatus(evnt)\n{\n  const st =['','currentlyReading','wantToRead','read','none'];\n  this.props.books.filter(book=>book.title===evnt.id).map(bknew =>bknew.shelf = st[evnt.selectedIndex]);\nthis.props.books.filter(bk=>bk.title===evnt.id).map(bk=> BooksAPI.update(bk,st[evnt.selectedIndex]).then(res=>bk.shelf=st[evnt.selectedIndex]).catch(err=>console.log(\"ERROR\")));\nthis.setState({});\n}\n\n  renderBooks = (status) => {\n         \n    \treturn this.props.books.map(bk=>bk).filter(book=>book.shelf===status).map(book => {\n        \n      return (\n       \n\t\t\t <li>\n                        <div className=\"book\">\n                          <div className=\"book-top\">\n        \n           <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${book.imageLinks.thumbnail})`}}>\n                     </div>\n\n\t\t\t\t\t<div className=\"book-shelf-changer\">\n\n                      <select id={ `${book.title}` } onChange={evt => this.changeStatus(evt.target)}>\n                               <option >Select</option>\n                               <option value=\"currentlyReading\">Currently Reading</option>\n                                <option value=\"wantToRead\">Want to Read</option>\n                                <option value=\"read\">Read</option>\n\t\t\t\t\t\t\t\t<option value=\"none\">None</option>\n                               </select>\n                          \n                            </div>\n                          </div>\n                           <div className=\"book-title\">{ book.title }</div>\n                          <div className=\"book-authors\">{ book.authors }</div>\n                         \n                        </div>\n                      </li>\n\n\n      )\n    })\n}\n\n\n  render() {\n\n     if(this.state.showSearchPage == true)\n\t{\n    \treturn (\n        \n        <div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>MyReads</h1>\n            </div>\n            <div className=\"list-books-content\">\n\t        <div name=\"searchShelf\" >\n                <div className=\"bookshelf\">\n                  <h2 className=\"bookshelf-title\">Search Results</h2>\n                  <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">\n                       \n                         { this.renderBooks('none') }\n                    </ol>\n                  </div>\n                </div>\n              </div>\n</div>\n</div>\n)\n}\nelse\n{\n\treturn(\n        <div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>MyReads</h1>\n            </div>\n            <div className=\"list-books-content\">\n\t  \n\t\t<div name=\"currentShelf\">\n                <div className=\"bookshelf\">\n                  <h2 className=\"bookshelf-title\">Currently Reading</h2>\n                  <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">\n                     \n                    { this.renderBooks('currentlyReading') }\n                    </ol>\n                  </div>\n                </div>\n              </div>\n\t\t\t<div name=\"readShelf\">\n                <div className=\"bookshelf\">\n                  <h2 className=\"bookshelf-title\">Read</h2>\n                  <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">\n                     \n                    { this.renderBooks('read') }\n                    </ol>\n                  </div>\n                </div>\n              </div>\n\t\t\t<div name=\"wantShelf\">\n                <div className=\"bookshelf\">\n                  <h2 className=\"bookshelf-title\">Want To Read</h2>\n                  <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">\n                     \n                    { this.renderBooks('wantToRead') }\n                    </ol>\n                  </div>\n                </div>\n              </div>\n  \n</div>\n</div>\n\n        )}\n}\n  \n}\nexport default BookShelf","import React from 'react'\r\nimport {Component} from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport BookShelf from './BookShelf.js'\r\nconst resultSet=[]\r\nclass Books extends React.Component {\r\n   state = {\r\n        showSearchPage: false,\r\n    books:[]\r\n  }\r\n\r\ncomponentDidMount(){\r\n\tconsole.log(\"component mounted\");\r\n BooksAPI.getAll().then(res=>console.log(res));\r\nBooksAPI.getAll().then(res=>this.setState({books:res}))\r\n                   .catch(err => console.log(err));\r\n  \r\n}\r\n\r\n changeStatus(evnt)\r\n{\r\n  const st =['currentlyReading','wantToRead','read','none']\r\n  //console.log(\"changed status is  \" +st[evnt.selectedIndex] +\"  title is \"+evnt.id);\r\nthis.state.books.map(book =>book).filter(book=>book.title===evnt.id).map(bknew =>bknew.shelf = st[evnt.selectedIndex]);\r\n\r\n\r\nBooksAPI.update(this.state.books.filter(book=>book.title===evnt.id),st[evnt.selectedIndex])\r\n\t\t\t.then(res=>this.state.books.filter(book=>book.id===res.id).map(bknew =>bknew.shelf = res.shelf))\r\n                    .catch(err => console.log(err));\r\nthis.setState({books:this.state.books.map(bk=>bk).filter(bk=>bk.shelf!=\"none\")})\r\nthis.state.books.map(bk=>console.log(\"BOOKS AFTER UPDATE \" +bk.title));\r\n\r\n}\r\n   \r\n\r\n render(){\r\n  \r\n return     (<BookShelf  books={this.state.books}/>)\r\n  \t \r\n   }\r\n  \r\n}\r\nexport default Books\r\n","import React from 'react'\nimport Component from 'react'\nimport Books from './Books'\nimport BookShelf from './BookShelf.js'\nimport App from './App.js'\nimport * as BooksAPI from './BooksAPI'\nvar flagqry = false;\nclass SearchBooks extends React.Component {\n  \n  state = {\n        showSearchPage: true,\n         books:[]\n  }\n  \n  \n  \nsearchBooks(qry)\n{\n \n  if(qry.length > 0)\n  {\n  console.log(\"   QUERY IS   \"+qry);\n\n BooksAPI.search(qry,20).then(res=>this.setState({books:res}))\n                 .catch(err => console.log(err));\n    if(this.state.books.length > 0)\n       {\n\t\t\tthis.setState({books:this.state.books.filter(bk=>bk.hasOwnProperty('shelf')== false)\n                   .map((books) => {return {...books, 'shelf':'none'}})});\n}\n    this.state.books.map(bk=>console.log(\"ADDED Shelf to the books \" + bk.title + \" shelf \" +bk.shelf));\n  this.state.books.map(bk=>BooksAPI.update(bk,'none').then(res=>console.log(\"SETTING Status for \" + bk.title )).catch(err=>console.log(\"ERROR\")));\n                                 \n  }\n  else\n  {\n  console.log(\"QUERY IS EMPTY\" +qry.length);\n    this.setState({books:[]});\n   }\n}\n changeStatus(evnt)\n{\n  const st =['','currentlyReading','wantToRead','read','none'];\n this.state.books.filter(book=>book.title===evnt.id).map(bknew =>bknew.shelf = st[evnt.selectedIndex]);\n this.state.books.filter(bk=>bk.title===evnt.id).map(bk=> BooksAPI.update(bk,st[evnt.selectedIndex]).then(res=>console.log(\"Changing and updating shelf for \" + bk.title )).catch(err=>console.log(\"ERROR\")));\n   this.setState({});                         \n BooksAPI.getAll().then(res=>console.log(res));   \n}\nmyPage(){\n BooksAPI.getAll().then(res=>console.log(res)); \n  // location.href = \"./\";\n}\n\n renderBooks = () => {\n   \n   \nreturn this.state.books.filter(bk=>bk.shelf!='read'&&bk.shelf!='wantToRead'&&bk.shelf!='currentlyReading').map(book => {\n             if(book.imageLinks.thumbnail.length==0) book.imageLinks.thumbnail='';\n        \n      return (\n       \n\t\t\t <li>\n                        <div className=\"book\">\n                          <div className=\"book-top\">\n        \n           <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${book.imageLinks.thumbnail})`}}>\n                     </div>\n\n\t\t\t\t\t<div className=\"book-shelf-changer\">\n\n                      <select id={ `${book.title}` } onChange={evt => this.changeStatus(evt.target)}>\n                              <option >Select</option>\n                               <option value=\"currentlyReading\">Currently Reading</option>\n                                <option value=\"wantToRead\">Want to Read</option>\n                                <option value=\"read\">Read</option>\n\t\t\t\t\t\t     </select>\n                          \n                            </div>\n                          </div>\n                           <div className=\"book-title\">{ book.title }</div>\n                          <div className=\"book-authors\">{ book.authors }</div>\n                         \n                        </div>\n                      </li>\n\n\n      )\n}\n)}\n\nrender() {\n  \n    return (\n \t\t<div className=\"search-books\">\n            <div className=\"search-books-bar\">\n          \t\t\t<a className=\"close-search\" onClick={evt=>this.myPage()}>Close</a>\n\t\t\t\n              <div className=\"search-books-input-wrapper\" >\n                <input type=\"text\" placeholder=\"Search by title or author\" onChange={evt => this.searchBooks(evt.target.value)}/>\n\t\n\n\t<div className=\"list-books\">\n\n            <div className=\"list-books\">\n            <div className=\"list-books-content\">\n\t        <div name=\"searchShelf\" >\n                <div className=\"bookshelf\">\n                  <h2 className=\"bookshelf-title\">Search Results</h2>\n                  <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">\n                       \n\t\t\t\t\t{this.renderBooks()}\n\n                    </ol>\n                  </div>\n                </div>\n  </div>\n</div>\n</div>\n</div>\n</div>\t\n</div>\n</div>\n\t\n\t\t\t\n)\n  \t\t\t    \n         \n}\n\n       \n}\n\nexport default SearchBooks\n  \n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Component from 'react'\n import * as BooksAPI from './BooksAPI'\nimport SearchBooks from './SearchBooks.js'\nimport Books from './Books.js'\nimport BookShelf from './BookShelf.js'\nimport App from './App.css'\nimport {\n  BrowserRouter as Router,\n  Link,\n  Route,\n  Switch,\n} from 'react-router-dom';\nclass BooksApp extends React.Component {\n  \n  state = {\n    \n    showSearchPage: false,\n    books:[]\n  }\n\nsearchBooks()\n{\n SearchBooks.searchBooks(); \n}\n  render() {\n    return (\n         <Router>    \n       <div className=\"app\">\n       \n          \n     \n      <div><Link to=\"/SearchBooks\"  ><button >Search</button></Link></div>\n     \n      <Switch>\n        <Route exact path=\"/\"  component={Books}/>\n        <Route  exact path=\"/SearchBooks\" component={SearchBooks} />\n         <Route  exact path=\"/BookShelf\" component={BookShelf} render={() => (<BookShelf books={this.state.books} showSearchPage={this.state.showSearchPage} />)}  />\n\t\t \n \n\t\t\n      </Switch>\n\n       </div> \n  </Router>\n    \n        \n        \n        \n                \n      \n        \n        )\n\t\t}\n      \n  }\n         \nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}