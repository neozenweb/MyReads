{"version":3,"sources":["BooksAPI.js","BookShelf.js","Books.js","SearchBooks.js","App.js","index.js"],"names":["api","headers","Accept","Authorization","Math","random","toString","substr","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","BookShelf","state","showSearchPage","_this","props","books","renderBooks","status","map","bk","filter","react_default","a","createElement","className","style","width","height","backgroundImage","imageLinks","thumbnail","title","onChange","evt","changeStatus","target","value","authors","evnt","st","this","bknew","selectedIndex","BooksAPI","catch","err","console","log","setState","name","React","Component","Books","_this2","_this3","data","src_BookShelf","SearchBooks","length","qry","query","maxResults","hasOwnProperty","alert","onClick","myPage","bind","type","placeholder","searchBooks","src_App","BooksApp","src_Books","src_SearchBooks","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f04325d.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token =  Math.random().toString(36).substr(-8);\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query, maxResults) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query, maxResults })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from 'react'\nimport Component from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport SearchBooks from './SearchBooks'\nclass BookShelf extends React.Component {\n   state = {\n        showSearchPage: this.props.showSearchPage,\n    books:this.props.books\n  }\nchangeStatus(evnt)\n{\n  const st =['','currentlyReading','wantToRead','read','none'];\n  this.props.books.filter(book=>book.title===evnt.id).map(bknew =>bknew.shelf = st[evnt.selectedIndex]);\nthis.props.books.filter(bk=>bk.title===evnt.id).map(bk=> BooksAPI.update(bk,st[evnt.selectedIndex]).then(res=>bk.shelf=st[evnt.selectedIndex]).catch(err=>console.log(\"ERROR\")));\nthis.setState({});\n}\n\n  renderBooks = (status) => {\n         \n    \treturn this.props.books.map(bk=>bk).filter(book=>book.shelf===status).map(book => {\n        \n      return (\n       \n\t\t\t <li>\n                        <div className=\"book\">\n                          <div className=\"book-top\">\n        \n           <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${book.imageLinks.thumbnail})`}}>\n                     </div>\n\n\t\t\t\t\t<div className=\"book-shelf-changer\">\n\n                      <select id={ `${book.title}` } onChange={evt => this.changeStatus(evt.target)}>\n                               <option >Select</option>\n                               <option value=\"currentlyReading\">Currently Reading</option>\n                                <option value=\"wantToRead\">Want to Read</option>\n                                <option value=\"read\">Read</option>\n\t\t\t\t\t\t\t\t<option value=\"none\">None</option>\n                               </select>\n                          \n                            </div>\n                          </div>\n                           <div className=\"book-title\">{ book.title }</div>\n                          <div className=\"book-authors\">{ book.authors }</div>\n                         \n                        </div>\n                      </li>\n\n\n      )\n    })\n}\n\n\n  render() {\n\n     if(this.state.showSearchPage == true)\n\t{\n    \treturn (\n        \n        <div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>MyReads</h1>\n            </div>\n            <div className=\"list-books-content\">\n\t        <div name=\"searchShelf\" >\n                <div className=\"bookshelf\">\n                  <h2 className=\"bookshelf-title\">Search Results</h2>\n                  <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">\n                       \n                         { this.renderBooks('none') }\n                    </ol>\n                  </div>\n                </div>\n              </div>\n</div>\n</div>\n)\n}\nelse\n{\n\treturn(\n        <div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>MyReads</h1>\n            </div>\n            <div className=\"list-books-content\">\n\t  \n\t\t<div name=\"currentShelf\">\n                <div className=\"bookshelf\">\n                  <h2 className=\"bookshelf-title\">Currently Reading</h2>\n                  <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">\n                     \n                    { this.renderBooks('currentlyReading') }\n                    </ol>\n                  </div>\n                </div>\n              </div>\n\t\t\t<div name=\"readShelf\">\n                <div className=\"bookshelf\">\n                  <h2 className=\"bookshelf-title\">Read</h2>\n                  <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">\n                     \n                    { this.renderBooks('read') }\n                    </ol>\n                  </div>\n                </div>\n              </div>\n\t\t\t<div name=\"wantShelf\">\n                <div className=\"bookshelf\">\n                  <h2 className=\"bookshelf-title\">Want To Read</h2>\n                  <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">\n                     \n                    { this.renderBooks('wantToRead') }\n                    </ol>\n                  </div>\n                </div>\n              </div>\n  \n</div>\n</div>\n\n        )}\n}\n  \n}\nexport default BookShelf","import React from 'react'\r\nimport {Component} from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport BookShelf from './BookShelf.js'\r\nconst resultSet=[]\r\nclass Books extends React.Component {\r\n   state = {\r\n        showSearchPage: false,\r\n    books:[]\r\n  }\r\n\r\n\r\n\r\n changeStatus(evnt)\r\n{\r\n  const st =['currentlyReading','wantToRead','read','none']\r\n this.state.books.map(book =>book).filter(book=>book.title===evnt.id).map(bknew =>bknew.shelf = st[evnt.selectedIndex]);\r\n  BooksAPI.update(this.state.books.filter(book=>book.title===evnt.id),st[evnt.selectedIndex])\r\n\t\t\t.then(res=>this.state.books.filter(book=>book.id===res.id).map(bknew =>bknew.shelf = res.shelf))\r\n                    .catch(err => console.log(err));\r\nthis.setState({books:this.state.books.map(bk=>bk).filter(bk=>bk.shelf!=\"none\")})\r\n\r\n}\r\n   \r\n\r\n render(){\r\nBooksAPI.getAll().then(res=>this.setState({books:res}))\r\n                   .catch(err => console.log(err));\r\n  return(<BookShelf  books={this.state.books} />);\r\n  \t \r\n   \r\n         }\r\n}\r\nexport default Books\r\n","import React from 'react'\nimport Component from 'react'\nimport Books from './Books'\nimport BookShelf from './BookShelf.js'\nimport App from './App.js'\nimport * as BooksAPI from './BooksAPI'\nvar flagqry = false;\nclass SearchBooks extends React.Component {\n  \n  state = {\n        showSearchPage: true,\n         books:[]\n  }\n  \n  \n  \nsearchBooks(qry)\n{\n \n  if(qry.length > 0)\n  {\n  \n\n BooksAPI.search(qry,20).then(res=>this.setState({books:res}))\n                 .catch(err => console.log(err));\n    if(this.state.books.length > 0)\n       {\n\t\t\tthis.setState({books:this.state.books.filter(bk=>bk.hasOwnProperty('shelf')== false)\n                   .map((books) => {return {...books, 'shelf':'none'}})});\n}\n     this.state.books.map(bk=>BooksAPI.update(bk,'none').then(res=>console.log(\"SETTING Status for \" + bk.title )).catch(err=>console.log(\"ERROR\")));\n                                 \n  }\n  else\n  {\n    this.setState({books:[]});\n   }\n}\n changeStatus(evnt,bk)\n{\n    \n    alert(\"updating status of \"+bk);\n  const st =['','currentlyReading','wantToRead','read','none'];\n /*this.state.books.filter(book=>book.title===evnt.id).map(bknew =>bknew.shelf = st[evnt.selectedIndex]);\n this.state.books.filter(bk=>bk.title===evnt.id).map(bk=> BooksAPI.update(bk,st[evnt.selectedIndex]).then(bk=>bk).catch(err=>console.log(\"ERROR\")));\n   this.setState({});                         \n */\n    \n    BooksAPI.update(bk,st[evnt.selectedIndex])\n        .then(res=>console.log(\"updated status for \" +bk))                                             \n         .catch(err=>console.log(\"ERROR in updating status for \"+bk));\n   this.setState({}); \n    \n}\nmyPage(){\n\n  this.setState({showSearchPage: false, books:[]});\n}\n\n renderBooks = () => {\n   \n   \nreturn this.state.books.filter(bk=>bk.shelf!='read'&&bk.shelf!='wantToRead'&&bk.shelf!='currentlyReading').map(book => {\n             if(book.imageLinks.thumbnail.length==0) book.imageLinks.thumbnail='';\n        \n      return (\n       \n\t\t\t <li>\n                        <div className=\"book\">\n                          <div className=\"book-top\">\n        \n           <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${book.imageLinks.thumbnail})`}}>\n                     </div>\n\n\t\t\t\t\t<div className=\"book-shelf-changer\">\n\n                      <select id={ `${book.title}` } onChange={evt => this.changeStatus(evt.target,`${book.id}`)}>\n                              <option >Select</option>\n                               <option value=\"currentlyReading\">Currently Reading</option>\n                                <option value=\"wantToRead\">Want to Read</option>\n                                <option value=\"read\">Read</option>\n\t\t\t\t\t\t     </select>\n                          \n                            </div>\n                          </div>\n                           <div className=\"book-title\">{ book.title }</div>\n                          <div className=\"book-authors\">{ book.authors }</div>\n                         \n                        </div>\n                      </li>\n\n\n      )\n}\n)}\n\nrender() {\n  \nif(this.state.showSearchPage==true)\n{\n    return (\n \t\t<div className=\"search-books\">\n            <div className=\"search-books-bar\">\n          \t\t\t<a className=\"close-search\" onClick={this.myPage.bind(this)}>Close</a>\n\t\t\t\n              <div className=\"search-books-input-wrapper\" >\n                <input type=\"text\" placeholder=\"Search by title or author\" onChange={evt => this.searchBooks(evt.target.value)}/>\n\t\n\n\t<div className=\"list-books\">\n\n            <div className=\"list-books\">\n            <div className=\"list-books-content\">\n\t        <div name=\"searchShelf\" >\n                <div className=\"bookshelf\">\n                  <h2 className=\"bookshelf-title\">Search Results</h2>\n                  <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">\n                       \n\t\t\t\t\t{this.renderBooks()}\n\n                    </ol>\n                  </div>\n                </div>\n  </div>\n</div>\n</div>\n</div>\n</div>\t\n</div>\n</div>\n\t\n\t\t\t\n)\n}\nelse{\n\n   return(<App showSearchPage={false} books={[this.state.books]}/>);\n\n\n}\n         \n}\n\n       \n}\n\nexport default SearchBooks\n  \n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Component from 'react'\n import * as BooksAPI from './BooksAPI'\nimport SearchBooks from './SearchBooks.js'\nimport Books from './Books.js'\nimport BookShelf from './BookShelf.js'\nimport App from './App.css'\n\nclass BooksApp extends React.Component {\n  searchBooks()\n{\n //SearchBooks.searchBooks(\"\"); \n   this.setState({showSearchPage:true, books:[]});\n}\n  state = {\n    \n    showSearchPage: false,\n    books:[]\n  }\n\n\n  render() {\n    \n      if(this.state.showSearchPage==false)\n          {\n            return (\n\n               <div className=\"app\">\n\n\n\n              <div><button onClick={this.searchBooks.bind(this)}>Search</button></div>\n             <Books showSearchPage={false} books={this.state.books}/>\n\n\n               </div> );\n            }\n \n    else\n        {\n             return(\n                 \n                 <div className=\"app\">\n\n             <SearchBooks showSearchPage={true} books={this.state.books}/>\n\n\n               </div> );\n            \n        }\n        \n        \n        \n                \n    \n\t\t}\n      \n  }\n         \nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}